import { NavigationExperimental } from 'react-native';

const { CardStack: NavigationCardStack } = NavigationExperimental;

class {{componentName}} extends Component {
  render() {
    return (
      <NavigationCardStack
        direction={ 'vertical' }
        navigationState={ this.props.{{selectorName}} }
        onNavigate={ this.props.onNavigate }
        renderScene={ this._renderScene.bind(this) }
        renderOverlay={ this._renderHeader.bind(this) }
        style={ styles.main }
      />
    );
  }

  _renderScene(props) {
    // check *props.scene.navigationState.key* to figure out
    // which scene shoud be rendered, for example
    //
    // if (props.scene.navigationState.key === 'applicationTabs') {
    //  return (
    //    <View>
    //      <ApplicationTabs />
    //    </View>
    //  );
    // }

    return (
      <View style={ styles.container }>
        <Text>Generic scene in {{componentName}}</Text>
      </View>
    );
  }

  _renderTitleComponent(props) {
    return null;
  }

  _renderHeader(props) {
    return null;
  }
}

const mergeProps = (stateProps, dispatchProps, ownProps) => {
  return Object.assign({}, dispatchProps, stateProps, {
    onNavigate: (action) => {
      dispatchProps.dispatch(
        Object.assign(action, {
          scope: action.scope || stateProps.navigation.key
        })
      );
    }
  });
};

{{> mapDispatchAndPropsAndConnect mergeProps=true }}